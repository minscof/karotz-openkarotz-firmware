#!/bin/bash

source /usr/www/cgi-bin/setup.inc
source /usr/www/cgi-bin/utils.inc
source /usr/www/cgi-bin/url.inc

TDIR="/usr/www"
UDIR="$CNF_DATADIR"
SURL=$CNF_BASE_URL

ReadUrlParam

# Checking Forced Update
FU=${URLParam[force]}
CHECK=${URLParam[check]}
CIF=${URLParam[clear]}

if [ "$FU" == "1" ] || [ "$1" == "1" ]; then
 if [ -f $CNF_DATADIR/Apps/Story/apps.installed ]; then
   rm -f $CNF_DATADIR/Apps/Story/apps.installed >>/dev/null 2>>/dev/null
 fi
fi

if [ "$CHECK" == "1" ]; then
  if [ -f $CNF_DATADIR/Apps/Story/apps.installed ]; then
    TG='{"return":"0","enabled":"1"}'
  else
    TG='{"return":"0","enabled":"0"}'
  fi
  SendResponse "$TG"
  exit 0
fi


if [ "$CIF" == "1" ]; then
  if [ -f $CNF_DATADIR/Apps/Story/apps.installed ]; then
     rm -f $CNF_DATADIR/Apps/Story/apps.installed  >>/dev/null 2>>/dev/null
     Log  "Apps Story"  "Removing Application"
  else
     Log  "Apps Story"  "No application to remove" 1
  fi
  TG='{"return":"0"}'
  SendResponse "$TG"
  exit 0
fi
                  

# Checking root Web
if [ ! -d $TDIR ]; then
   mkdir $TDIR >>/dev/null 2>>/dev/null
fi

# Checking Data root
if [ ! -d $CNF_DATADIR ]; then
   mkdir $CNF_DATADIR >>/dev/null 2>>/dev/null
fi

# Checking Tmp
if [ ! -d $CNF_DATADIR/Tmp ]; then
   mkdir $CNF_DATADIR/Tmp >>/dev/null 2>>/dev/null
fi
   
# Checking Run
if [ ! -d $CNF_DATADIR/Run ]; then
   mkdir $CNF_DATADIR/Run >>/dev/null 2>>/dev/null
fi

# Checking Apps
if [ ! -d $CNF_DATADIR/Apps ]; then
  mkdir $CNF_DATADIR/Apps >>/dev/null 2>>/dev/null
fi
         
if [ ! -d $CNF_DATADIR/Apps/Story ]; then
   mkdir $CNF_DATADIR/Apps/Story >>/dev/null 2>>/dev/null
fi
 
# Get local version
if [ ! -f $CNF_DATADIR/Apps/Story/apps.installed ]; then
   I=-1
else
   I=1
fi

# Get server Version
rm $TDIR/server.ok.version >>/dev/null 2>>/dev/null
if [ "$I" -ge "0" ] ; then
   Log	"Apps Story"  "No update needed"
   TG='{"return":"0"}'
   SendResponse "$TG"
   exit 0
else
    Log "Apps Story" "Starting Installation"
  # Update install flag
  echo "1" > $CNF_DATADIR/Apps/Story/apps.installed
fi

Log "Apps"  "Story Apps Installed" 

TG='{"return":"0"}'
SendResponse "$TG"
           
# ########/usr/bin/madplay $UDIR/Voice/install_ok.mp3 >>/dev/null 2>>/dev/null
      
